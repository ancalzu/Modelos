name: Java CI with Maven and Deployment

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn clean verify
      - name: PMD Analysis
        run: mvn pmd:check

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run Integration Tests
        run: mvn verify

  create-and-publish-container:
    needs: integration-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      - name: Prepare tag for Docker image
        id: prep
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "::set-output name=tag_name::${TAG_NAME}"
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: davidcas212/models:${{ steps.prep.outputs.tag_name }}

  deploy-shift:
    needs: create-and-publish-container
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to OpenShift
        run: |
           oc login --token=${{ secrets.OPENSHIFT_TOKEN }} --server=${{ secrets.OPENSHIFT_SERVER }}
           oc project ancalzu-dev 
           oc new-app davidcas212/models:${{ steps.prep.outputs.tag_name }} --name=models
           oc expose svc/models